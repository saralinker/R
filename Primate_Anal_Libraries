#####
# libraries for the primate analysis
# Use with AnalyzePrim.R
# From paper -> doi:10.1038/nature10532
load.Hum.exp <- function(){
  humExp <- read.table(as.matrix("Documents/primate_mac/Human_Ensembl57_TopHat_UniqueReads.txt"),header=TRUE)
  humExp <- humExp[humExp$Chr != "X" & humExp$Chr != "Y",]
  ## Remove samples with no expression
  mTest <- apply(X=humExp[,-c(1:6)],MARGIN=2,FUN=mean)
  #sTest <- apply(X=humExp[,-c(1:6)],MARGIN=2,FUN=sd)
  rm <- ""
  for (i in 1:length(mTest)){
    if (mTest[i] == 0){
      rm <- c(rm,i)
    }
  }
  rm <- as.numeric(rm[-c(1)]) + 6
  if (length(rm) > 0){
    humExp <- humExp[,-c(rm)]
  }
  return(humExp)
}

load.Prim.exp <- function (prim){
  if (prim == "RheMac"){
    primExp <- read.table(as.matrix("Documents/primate_mac/Macaque_Ensembl57_TopHat_UniqueReads.txt"),header=TRUE)
  }else if (prim == "GorGor"){
    primExp <- read.table(as.matrix("Documents/primate_mac/Gorilla_Ensembl57_TopHat_UniqueReads.txt"),header=TRUE)
  }else if (prim == "Chimp"){
    primExp <- read.table(as.matrix("Documents/primate_mac/Chimpanzee_Ensembl57_TopHat_UniqueReads.txt"),header=TRUE)
  }else if (prim == "Orangutan"){
    primExp <- read.table(as.matrix("Documents/primate_mac/Orangutan_Ensembl57_TopHat_UniqueReads.txt"),header=TRUE)
  }else if (prim == "Bonobo"){
    primExp <- read.table(as.matrix("Documents/primate_mac/Bonobo_Ensembl57_TopHat_UniqueReads.txt"),header=TRUE)
  }
  primExp <- primExp[primExp$Chr != "X" & primExp$Chr != "Y",]
  mTest <- apply(X=primExp[,-c(1:6)],MARGIN=2,FUN=mean)
  #sTest <- apply(X=primExp[,-c(1:6)],MARGIN=2,FUN=sd)
  rm <- ""
  for (i in 1:length(mTest)){
    if (mTest[i] == 0){
      rm <- c(rm,i)
    }
  }
  rm <- as.numeric(rm[-c(1)])+ 6
  if (length(rm) > 0){
    primExp <- primExp[,-c(rm)]
  }
  return(primExp)
}

load.polymorphisms <- function(polyGenes.frame,test.type){
  nomen <- c("chr","start","stop","GeneID","score","stranda","strandb","dis")
  if (length(colnames(polyGenes.frame)) == length(nomen)){
    colnames(polyGenes.frame) <- c("chr","start","stop","GeneID","score","stranda","strandb","dis")
  }else if (regexpr("ExonReg",text=test.type)[1] >=1){
    colnames(polyGenes.frame) <- c("chr","start","stop","GeneID","score","stranda","strandb","dis")
   }else{
    colnames(polyGenes.frame) <- c("chr","start","stop","GeneID","score","strand")
  }
   return(polyGenes.frame)
}

get.poly.genes <- function (polyGenes.frame,count.test){
  #grab genes that contain a polymorphic element
  count <- table(polyGenes.frame$GeneID)
  polyGenes <- data.frame(names(count),count)
  polyGenes <- polyGenes[,-c(1)]
 # colnames(polyGenes) <- c("GeneID","count")
  if (count.test == FALSE){
    polyGenes <- as.data.frame(polyGenes[polyGenes$count ==1,])
    colnames(polyGenes) <- c("GeneID","count")
  }
  else{
    polyGenes <- as.data.frame(polyGenes.frame$GeneID) 
  }
  return(polyGenes)
}

hum.orthologs <- function (humExp,orth,prim){
  colnames(orth) <- c("GeneID","Chimpanzee","Gorilla","Orangutan","Macaque")
  if (prim == "RheMac"){
    primGeneID <- join(orth,humExp,by="GeneID")[,c(1,5)]
    #primGeneID <- na.exclude(orth[match(orth$Human,humExp$GeneID),][c(1,5)])
    colnames(primGeneID) <- c("GeneID","Macaque")
  }else if (prim == "GorGor"){
    primGeneID <- join(orth,humExp,by="GeneID")[,c(1,3)]
    #primGeneID <- na.exclude(orth[match(orth$Human,humExp$GeneID),][c(1,3)])
    colnames(primGeneID) <- c("GeneID","Gorilla")
  }else if (prim == "Chimp"){
    primGeneID <- join(orth,humExp,by="GeneID")[,c(1,2)]
    #primGeneID <- na.exclude(orth[match(orth$Human,humExp$GeneID),][c(1,2)])
    colnames(primGeneID) <- c("GeneID","Chimpanzee")
  }else if (prim == "Orangutan"){
    primGeneID <- join(orth,humExp,by="GeneID")[,c(1,4)]
    #primGeneID <- na.exclude(orth[match(orth$Human,humExp$GeneID),][c(1,4)])
    colnames(primGeneID) <- c("GeneID","Orangutan")
  }
  humExp2 <- join(primGeneID,humExp,by="GeneID",type="inner",match="all")
  return(humExp2)
}

prim.orthologs <- function (primExp,orth,prim){
  if (prim == "RheMac"){
    #humGeneID <- na.exclude(orth[match(orth$Macaque,primExp$GeneID),][c(1,5)])
    colnames(orth) <- c("Human","Chimpanzee","Gorilla","Orangutan","GeneID")
    humGeneID <- join(orth,primExp,by="GeneID")[,c(1,5)]
    colnames(humGeneID) <- c("Human","GeneID")
  }else if (prim == "GorGor"){
    #humGeneID <- na.exclude(orth[match(orth$Gorilla,primExp$GeneID),][c(1,3)])
    colnames(orth) <- c("Human","Chimpanzee","GeneID","Orangutan","Macaque")
    humGeneID <- join(orth,primExp,by="GeneID")[,c(1,3)]
    colnames(humGeneID) <- c("Human","GeneID")
  }else if (prim == "Chimp"){
    #humGeneID <- na.exclude(orth[match(orth$Chimpanzee,primExp$GeneID),][c(1,2)])
    colnames(orth) <- c("Human","GeneID","Gorilla","Orangutan","Macaque")
    humGeneID <- join(orth,primExp,by="GeneID")[,c(1,2)]
    colnames(humGeneID) <- c("Human","GeneID")
    }else if (prim == "Orangutan"){
    #humGeneID <- na.exclude(orth[match(orth$Orangutan,primExp$GeneID),][c(1,4)])
    colnames(orth) <- c("Human","Chimpanzee","Gorilla","GeneID","Macaque")
    humGeneID <- join(orth,primExp,by="GeneID")[,c(1,4)]
    colnames(humGeneID) <- c("Human","GeneID")
    }
  primExp <- join(humGeneID,primExp,by="GeneID",type="inner",match="all")
  return(primExp)
}

poly.expression <- function (humExp2,primExp2,polyGenes,polyGenes.frame,test.type,type){
  #make sure that hum and primate have the same #rows
  # once the polyGenes are selected (need to double back to do this)
  #1.)match hum to poly genes 
  if(ncol(polyGenes) == 2){
    colnames(polyGenes) <- c("GeneID","count")
  }else if (ncol(polyGenes) == 1){
    colnames(polyGenes) <- c("GeneID")
  }
    humPolyExp <- join(humExp2,unique(polyGenes),by="GeneID",type="inner",match="all") #CHANGED HERE
    #humPolyExp2 <- merge(x=humPolyExp,y=unique(polyGenes),by="GeneID")    
  #2.)match prim to those that hum matched

  if(ncol(polyGenes) == 2){
    colnames(polyGenes) <- c("Human","count")
  }else if (ncol(polyGenes) == 1){
    colnames(polyGenes) <- c("Human")
  }
    primPolyExp <- join(x=primExp2,y=unique(polyGenes),by="Human",type="inner",match="all")#CHANGE first -. all here

    #primPolyExp <- merge(x=primPolyExp,y=unique(polyGenes),by.y="Human",by.x="Human")
    #3.)double back: match hum to those that prim matched
    colnames(humPolyExp) <- c("Human",colnames(humPolyExp[,-c(1)]))
    humPolyExp2 <- join(humPolyExp,primPolyExp,by="Human",type="inner",match="first")
    primPolyExp2 <- join(primPolyExp,humPolyExp,by="Human",type="inner",match="first")
    colnames(humPolyExp) <- c("GeneID",colnames(humPolyExp[,-c(1)]))
    
    if (regexpr("ExonReg",text=test.type)[1] >=1 ){
      h <- humPolyExp2[,-c(27:44)]
      #humPolyExp2 <- merge(h,polyGenes.frame,by="GeneID")
      humPolyExp2 <- join(h,polyGenes.frame,by="GeneID",match="all")#changed first to all
    }
  if (type == "human"){
    return(humPolyExp2)
  }else{
    return(primPolyExp2)
  }
} 

cons.expression <- function (humExp,humPolyExp,primExp,primPolyExp) {
  humPolyGenes <- humExp[match(humExp$GeneID,humPolyExp$GeneID),][2] 
  compare <- data.frame(humExp$GeneID,humPolyGenes[,1]) 
  #Get genes that are not polymorphic
  humConsGenes <- as.data.frame(compare[(is.na(compare[,2] == TRUE)),][,1]) 
  colnames(humConsGenes) <- c("GeneID")
  humExp$GeneID <- as.factor(humExp$GeneID)
  humConsExp <- join(humExp,humConsGenes,by="GeneID",type="inner",match="all")#CHANGE first to all
  #remove instances where primate doesn't have an orth. gene
  humConsExp <- na.exclude(humConsExp)
  primPolyGenes <- primExp[match(primExp$GeneID,primPolyExp$GeneID),][2]
  compare <- data.frame(primExp$GeneID,primPolyGenes[,1])
  primConsGenes <- compare[(is.na(compare[,2] == TRUE)),][,1]
  primConsExp <- primExp[match(primConsGenes,primExp$GeneID,nomatch=FALSE),]
  #remove instances where primate doesn't have an orth. gene
  primConsExp <- na.exclude(primConsExp)
  colnames(humConsExp) <- c("Human",colnames(humConsExp[,-c(1)]))
  primConsExp <- join(primConsExp,humConsExp,by="Human",type="inner",match="all")#CHANGED first -> all here
  humConsExp <- join(humConsExp,primConsExp,by="Human",type="inner",match="all")#CHANGED first -> all here
  
  if (type == "human"){
    return(humConsExp)
  }else{
    return(primConsExp)
  }
}

tissue.values <- function (tissue,prim,humPolyExp,humConsExp,primPolyExp,primConsExp,type) {
  ###Average over tissue depending on the species, tissue type, and sex
  if (tissue == "brain"){
    if (sex.specific == "male"){
      hPolymean <- apply(X=humPolyExp[,c(9:13)],MARGIN=1,FUN=mean)
      hConsmean <- apply(X=humConsExp[,c(9:13)],MARGIN=1,FUN=mean)
      if (prim == "RheMac" | prim == "GorGor" | prim == "Orangutan"){
        pPolymean <- primPolyExp[,c(9)]
        pConsmean <- primConsExp[,c(9)]
      }else if (prim == "Chimp"){
        pPolymean <- apply(X=primPolyExp[,c(8:12)],MARGIN=1,FUN=mean)
        pConsmean <- apply(X=primConsExp[,c(8:12)],MARGIN=1,FUN=mean)
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }else if (sex.specific == "female"){
      hPolymean <- humPolyExp[,c(8)]
      hConsmean <- humConsExp[,c(8)]
      if (prim == "RheMac"| prim == "GorGor"| prim == "Orangutan"){
        pPolymean <- primPolyExp[,c(8)]
        pConsmean <- primConsExp[,c(8)]
      }else if (prim == "Chimp"){
        pPolymean <- primPolyExp[,c(13)]
        pConsmean <- primConsExp[,c(13)]
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }else{
      hPolymean <- apply(X=humPolyExp[,c(8:13)],MARGIN=1,FUN=mean)
      hConsmean <- apply(X=humConsExp[,c(8:13)],MARGIN=1,FUN=mean)
      if (prim == "RheMac"| prim == "GorGor"){
        pPolymean <-  apply(X=primPolyExp[,c(8:9)],MARGIN=1,FUN=mean)
        pConsmean <-  apply(X=primConsExp[,c(8:9)],MARGIN=1,FUN=mean)
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }
  }else  if (tissue == "cerebellum"){
    if (sex.specific == "male"){
      hPolymean <- humPolyExp[,c(15)]
      hConsmean <- humConsExp[,c(15)]
      if (prim == "RheMac"| prim == "GorGor"| prim == "Orangutan"){
        pPolymean <- primPolyExp[,c(11)]
        pConsmean <- primConsExp[,c(11)]
      }else if (prim == "Chimp"){
        pPolymean <- primPolyExp[,c(14)]
        pConsmean <- primConsExp[,c(14)]
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }else if (sex.specific == "female"){
      hPolymean <- humPolyExp[,c(14)]
      hConsmean <- humConsExp[,c(14)]
      if (prim == "RheMac"| prim == "GorGor"| prim == "Orangutan"){
        pPolymean <- primPolyExp[,c(10)]
        pConsmean <- primConsExp[,c(10)]
      }else if (prim == "Chimp"){
        pPolymean <- primPolyExp[,c(15)]
        pConsmean <- primConsExp[,c(15)]
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }else{
      hPolymean <- apply(X=humPolyExp[,c(14:15)],MARGIN=1,FUN=mean)
      hConsmean <- apply(X=humConsExp[,c(14:15)],MARGIN=1,FUN=mean)
      if (prim == "RheMac"| prim == "GorGor"){
        pPolymean <- apply(X=primPolyExp[,c(10:11)],MARGIN=1,FUN=mean)
        pConsmean <- apply(X=primConsExp[,c(10:11)],MARGIN=1,FUN=mean)
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }
  }else  if (tissue == "heart"){
    if (sex.specific == "male"){
      hPolymean <- apply(X=humPolyExp[,c(17:18)],MARGIN=1,FUN=mean)
      hConsmean <- apply(X=humConsExp[,c(17:18)],MARGIN=1,FUN=mean)
      if (prim == "RheMac"| prim == "GorGor"| prim == "Orangutan"){
        pPolymean <- primPolyExp[,c(13)]
        pConsmean <- primConsExp[,c(13)]
      }else if (prim == "Chimp"){
        pPolymean <- primPolyExp[,c(16)]
        pConsmean <- primConsExp[,c(16)]
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }else if (sex.specific == "female"){
      hPolymean <- humPolyExp[,c(16)]
      hConsmean <- humConsExp[,c(16)]
      if (prim == "RheMac"| prim == "GorGor"| prim == "Orangutan"){
        pPolymean <- primPolyExp[,c(12)]
        pConsmean <- primConsExp[,c(12)]
      }else if (prim == "Chimp"){
        pPolymean <- primPolyExp[,c(17)]
        pConsmean <- primConsExp[,c(17)]
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }else{
      hPolymean <- apply(X=humPolyExp[,c(16:18)],MARGIN=1,FUN=mean)
      hConsmean <- apply(X=humConsExp[,c(16:18)],MARGIN=1,FUN=mean)
      if (prim == "RheMac"| prim == "GorGor"){
        pPolymean <- apply(X=primPolyExp[,c(12:13)],MARGIN=1,FUN=mean)
        pConsmean <- apply(X=primConsExp[,c(12:13)],MARGIN=1,FUN=mean)
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }
  }else  if (tissue == "kidney"){
    if (sex.specific == "male"){
      hPolymean <- apply(X=humPolyExp[,c(20:21)],MARGIN=1,FUN=mean)
      hConsmean <- apply(X=humConsExp[,c(20:21)],MARGIN=1,FUN=mean)
      if (prim == "RheMac"| prim == "GorGor"| prim == "Orangutan"){
        pPolymean <- primPolyExp[,c(15)]
        pConsmean <- primConsExp[,c(15)]
      }else if (prim == "Chimp"){
        pPolymean <- primPolyExp[,c(18)]
        pConsmean <- primConsExp[,c(18)]
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }else if (sex.specific == "female"){
      hPolymean <- humPolyExp[,c(19)]
      hConsmean <- humConsExp[,c(19)]
      if (prim == "RheMac"| prim == "GorGor"| prim == "Orangutan"){
        pPolymean <- primPolyExp[,c(14)]
        pConsmean <- primConsExp[,c(14)]
      }else if (prim == "Chimp"){
        pPolymean <- primPolyExp[,c(19)]
        pConsmean <- primConsExp[,c(19)]
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }else{
      hPolymean <- apply(X=humPolyExp[,c(19:21)],MARGIN=1,FUN=mean)
      hConsmean <- apply(X=humConsExp[,c(19:21)],MARGIN=1,FUN=mean)
      if (prim == "RheMac"| prim == "GorGor"){
        pPolymean <- apply(X=primPolyExp[,c(14:15)],MARGIN=1,FUN=mean)
        pConsmean <- apply(X=primConsExp[,c(14:15)],MARGIN=1,FUN=mean)
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }
  }else  if (tissue == "liver"){
    if (sex.specific == "male"){
      hPolymean <- apply(X=humPolyExp[,c(22:23)],MARGIN=1,FUN=mean)
      hConsmean <- apply(X=humConsExp[,c(22:23)],MARGIN=1,FUN=mean)
      if (prim == "RheMac"| prim == "GorGor"| prim == "Orangutan"){
        pPolymean <- primPolyExp[,c(17)]
        pConsmean <- primConsExp[,c(17)]
      }else if (prim == "Chimp"){
        pPolymean <- primPolyExp[,c(20)]
        pConsmean <- primConsExp[,c(20)]
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }else if (sex.specific == "female"){
      hPolymean <- NA
      hConsmean <- NA
      if (prim == "RheMac"| prim == "GorGor"| prim == "Orangutan"){
        pPolymean <- primPolyExp[,c(16)]
        pConsmean <- primConsExp[,c(16)]
      }else if (prim == "Chimp"){
        pPolymean <- primPolyExp[,c(21)]
        pConsmean <- primConsExp[,c(21)]
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }else{
      hPolymean <- apply(X=humPolyExp[,c(22:23)],MARGIN=1,FUN=mean)
      hConsmean <- apply(X=humConsExp[,c(22:23)],MARGIN=1,FUN=mean)
      if (prim == "RheMac"| prim == "GorGor"){
        pPolymean <- apply(X=primPolyExp[,c(16:17)],MARGIN=1,FUN=mean)
        pConsmean <- apply(X=primConsExp[,c(16:17)],MARGIN=1,FUN=mean)
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }
  }else  if (tissue == "testis"){
    if (sex.specific == "male"){
      hPolymean <- apply(X=humPolyExp[,c(24:25)],MARGIN=1,FUN=mean)
      hConsmean <- apply(X=humConsExp[,c(24:25)],MARGIN=1,FUN=mean)
      if (prim == "RheMac"| prim == "GorGor"| prim == "Orangutan"){
        pPolymean <- primPolyExp[,c(18)]
        pConsmean <- primConsExp[,c(18)]
      }else if (prim == "Chimp"){
        pPolymean <- primPolyExp[,c(22)]
        pConsmean <- primConsExp[,c(22)]
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }else if (sex.specific == "female"){
      hPolymean <- NA
      hConsmean <- NA
      pPolymean <- NA
      pConsmean <- NA
    }else{
      hPolymean <- apply(X=humPolyExp[,c(24:25)],MARGIN=1,FUN=mean)
      hConsmean <- apply(X=humConsExp[,c(24:25)],MARGIN=1,FUN=mean)
      if (prim == "RheMac"| prim == "GorGor"| prim == "Orangutan"){
        pPolymean <- primPolyExp[,c(18)]
        pConsmean <- primConsExp[,c(18)]
      }else{
        pPolymean <- NA
        pConsmean <- NA
      }
    }
  }
  if (type =="poly"){
    df <- data.frame(hPolymean,pPolymean)
  }else{
    df <- data.frame(hConsmean,pConsmean)
  }
  return(df)
}

fisher <- function(minFC,poly.frame,cons.frame){
  hPolymean <- poly.frame$hPolymean
  pPolymean <- poly.frame$pPolymean
  hConsmean <- cons.frame$hConsmean
  pConsmean <- cons.frame$pConsmean
  CalcPoly.df2 <- data.frame(hPolymean,pPolymean)
  CalcCons.df2 <- data.frame(hConsmean,pConsmean)
  
  # Determine which of the polymorphic genes are higher in hum or primate
  if (length(minFC) == 1){#if using a minimum fold change
    DirPoly2 <- CalcPoly.df2$hPolymean-CalcPoly.df2$pPolymean > minFC
    DirCons2 <- ( CalcCons.df2$hConsmean- CalcCons.df2$pConsmean) > minFC 
    DirPoly1 <- CalcPoly.df2$hPolymean-CalcPoly.df2$pPolymean < -1 * minFC
    DirCons1 <- ( CalcCons.df2$hConsmean- CalcCons.df2$pConsmean) < -1 * minFC 
  }else{
    DirPoly1 <- CalcPoly.df2$hPolymean < CalcPoly.df2$pPolymean #hless than
    DirCons1 <-  CalcCons.df2$hConsmean <  CalcCons.df2$pConsmean
    DirPoly2 <- CalcPoly.df2$hPolymean > CalcPoly.df2$pPolymean
    DirCons2 <-  CalcCons.df2$hConsmean >  CalcCons.df2$pConsmean
  }
  #FISCHER TEST
  cons <- c(length(DirCons2[DirCons2 == "TRUE"]),length(DirCons1[DirCons1 == "TRUE"]))
  poly <- c(length(DirPoly2[DirPoly2 == "TRUE"]),length(DirPoly1[DirPoly1 == "TRUE"]))
  df <- data.frame(poly,cons)
  rownames(df) <- c("human.greater","human.less")
  return(df)  
#   f <- (fisher.test(x=df))
#     f$cons <- cons
#     f$poly <- poly
#     return(f)
}

regression.frame <- function (poly.frame,cons.frame,humPolyExp,primPolyExp,minFC){
    hPolymean <- poly.frame$hPolymean
    pPolymean <- poly.frame$pPolymean
    hConsmean <- cons.frame$hConsmean
    pConsmean <- cons.frame$pConsmean
    
    model.expUP <- ((hPolymean - pPolymean) > minFC) * 2
    model.expDOWN <- ((hPolymean - pPolymean) < (-1 * minFC))*1
    model.exp <- model.expUP + model.expDOWN
    
      model.bin <- c(humPolyExp[,33] )
      model.sub <- c(humPolyExp$score)
      model.dis <- c(humPolyExp$ExonicLength)
      model.length <- c(humPolyExp$End - humPolyExp$Begin)
      model.poly <- c(rep(1,times=nrow(humPolyExp)))
      model.orient <- c(as.character(humPolyExp$stranda) == as.character(humPolyExp$strandb))
      dftest <- na.exclude(data.frame(model.exp,model.bin,model.dis,model.poly,model.sub,model.orient,model.length))
      colnames(dftest) <- c("exp","bin","dis","poly","sub","orient","length")
      dftest <- dftest[dftest[,1] != Inf & dftest[,1] != -Inf ,]
      dftest <- dftest[dftest$exp !=0,]
    return(dftest)
}
